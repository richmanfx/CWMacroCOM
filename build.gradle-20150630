apply plugin:'java'
apply plugin: 'application'

mainClassName = 'ru.r5am.Main'
[ compileJava, compileTestJava ]*.options*.encoding = 'UTF-8'
//jarDependenciesLib = 'help'

repositories {
	      mavenLocal()
              mavenCentral()	// Центральный репозиторий Maven
}

task wrapper(type: Wrapper) {
    			     gradleVersion = '2.4'
}


/*
gradle.taskGraph.whenReady {
			    taskGraph ->
			    def classpath = sourceSets.main.compileClasspath.collect {
										      jarDependenciesLib + File.separator + it.name
			                    }.join(', ')
                                            jar.manifest.attributes 'Main-Class': mainclass, 'Class-Path': classpath
}
*/

sourceSets {
    //intTest
    sourceSet.output.resourcesDir = 'build/libs/'
}

jar {
     baseName = 'cwmacrocom'
     version =  '1.0'
     manifest {
       	       attributes("Generated-By": "Gradle",
         	          "Main-Class": mainClassName, 
		          "Built-By": "Александр Ящук (Aleksandr Jashhuk), R5AM",
		          "Class-Path": "library/help-share.jar library/jewt.jar library/ohj.jar library/oracle_ice.jar library/share.jar library/jssc-2.8.0.jar library/nproperty-1.4.jar"
			 )
     }
}


task copyFiles(type: Copy) {
                                // Откуда
				from 'src/main/resources/'
    				
				// Куда
				into 'build/libs'

				// Что
				exclude 'fxml/', 'css/', 'data/', 'help/', 'images/'
				include '**/*.jar'
				// include '**/*.fxml', '**/*.css', '**/*.dat', '**/*.xml'
                                // include '**/*.hs', '**/*.map', '**/*.jar', '**/*.html'
                                // include '**/*.png', '**/*.jpg'
				
}


jar.dependsOn(copyFiles)

/*
///////////////////////////////////////////////////////
task addImages {
    def css = file("$buildDir/resources/main")
    outputs.dir css
    doLast {
        css.mkdirs()
    }
}
 
applicationDistribution.from(addImages) {
    into "bin/src/main/resources"
}
///////////////////////////////////////////////////////
*/



dependencies {
    		compile "junit:junit:3.8.2"
	
		// Local libraries
            	compile fileTree(dir: 'src/main/resources/library', include: ['*.jar'])
}
