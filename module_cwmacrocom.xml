<?xml version="1.0" encoding="UTF-8"?>
<project name="module_cwmacrocom" default="compile.module.cwmacrocom">
  <dirname property="module.cwmacrocom.basedir" file="${ant.file.module_cwmacrocom}"/>
  
  <property name="module.jdk.home.cwmacrocom" value="${jdk.home.1.8}"/>
  <property name="module.jdk.bin.cwmacrocom" value="${jdk.bin.1.8}"/>
  <property name="module.jdk.classpath.cwmacrocom" value="jdk.classpath.1.8"/>
  
  <property name="compiler.args.cwmacrocom" value="-encoding UTF-8 -source 1.7 ${compiler.args}"/>
  
  <property name="cwmacrocom.output.dir" value="${module.cwmacrocom.basedir}/out/production/cwmacrocom"/>
  <property name="cwmacrocom.testoutput.dir" value="${module.cwmacrocom.basedir}/out/test/cwmacrocom"/>
  
  <path id="cwmacrocom.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="cwmacrocom.module.production.classpath">
    <path refid="${module.jdk.classpath.cwmacrocom}"/>
    <path refid="library.ohj.classpath"/>
    <path refid="library.oracle_ice.classpath"/>
    <path refid="library.help-share.classpath"/>
    <path refid="library.jewt.classpath"/>
    <path refid="library.share.classpath"/>
    <path refid="library.nproperty-1.4.classpath"/>
    <path refid="library.jssc-2.8.0.classpath"/>
  </path>
  
  <path id="cwmacrocom.runtime.production.module.classpath">
    <pathelement location="${cwmacrocom.output.dir}"/>
    <path refid="library.ohj.classpath"/>
    <path refid="library.oracle_ice.classpath"/>
    <path refid="library.help-share.classpath"/>
    <path refid="library.jewt.classpath"/>
    <path refid="library.share.classpath"/>
    <path refid="library.nproperty-1.4.classpath"/>
    <path refid="library.jssc-2.8.0.classpath"/>
  </path>
  
  <path id="cwmacrocom.module.classpath">
    <path refid="${module.jdk.classpath.cwmacrocom}"/>
    <pathelement location="${cwmacrocom.output.dir}"/>
    <path refid="library.ohj.classpath"/>
    <path refid="library.oracle_ice.classpath"/>
    <path refid="library.help-share.classpath"/>
    <path refid="library.jewt.classpath"/>
    <path refid="library.share.classpath"/>
    <path refid="library.nproperty-1.4.classpath"/>
    <path refid="library.jssc-2.8.0.classpath"/>
  </path>
  
  <path id="cwmacrocom.runtime.module.classpath">
    <pathelement location="${cwmacrocom.testoutput.dir}"/>
    <pathelement location="${cwmacrocom.output.dir}"/>
    <path refid="library.ohj.classpath"/>
    <path refid="library.oracle_ice.classpath"/>
    <path refid="library.help-share.classpath"/>
    <path refid="library.jewt.classpath"/>
    <path refid="library.share.classpath"/>
    <path refid="library.nproperty-1.4.classpath"/>
    <path refid="library.jssc-2.8.0.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.cwmacrocom">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.cwmacrocom">
    <patternset refid="excluded.from.module.cwmacrocom"/>
  </patternset>
  
  <path id="cwmacrocom.module.sourcepath">
    <dirset dir="${module.cwmacrocom.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.cwmacrocom" depends="compile.module.cwmacrocom.production,compile.module.cwmacrocom.tests" description="Compile module cwmacrocom"/>
  
  <target name="compile.module.cwmacrocom.production" depends="register.custom.compilers" description="Compile module cwmacrocom; production classes">
    <mkdir dir="${cwmacrocom.output.dir}"/>
    <javac2 destdir="${cwmacrocom.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.cwmacrocom}/javac">
      <compilerarg line="${compiler.args.cwmacrocom}"/>
      <bootclasspath refid="cwmacrocom.module.bootclasspath"/>
      <classpath refid="cwmacrocom.module.production.classpath"/>
      <src refid="cwmacrocom.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.cwmacrocom"/>
    </javac2>
    
    <copy todir="${cwmacrocom.output.dir}">
      <fileset dir="${module.cwmacrocom.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.cwmacrocom.tests" depends="register.custom.compilers,compile.module.cwmacrocom.production" description="compile module cwmacrocom; test classes" unless="skip.tests"/>
  
  <target name="clean.module.cwmacrocom" description="cleanup module">
    <delete dir="${cwmacrocom.output.dir}"/>
    <delete dir="${cwmacrocom.testoutput.dir}"/>
  </target>
</project>